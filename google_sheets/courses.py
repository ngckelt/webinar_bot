import gspread
from dataclasses import dataclass

COURSES_NAMES_COLUMN_NUMBER = 1


@dataclass
class CourseData:
    name: str
    description: str
    price: str
    format: str
    payment_link: str


def get_sheet_data():
    gs = gspread.service_account("google_sheets/creds.json")
    return gs.open("–î–ª—è –±–æ—Ç–∞ –∫—É—Ä—Å—ã ").sheet1


def get_courses_names() -> list:
    courses_data_sheet = get_sheet_data()
    return courses_data_sheet.col_values(COURSES_NAMES_COLUMN_NUMBER)[1:]


def get_course_data_by_index(course_index: int):
    """
    data example:
    ['–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è',
    '–ü—Ä–æ–≥—Ä–∞–º–º–∞ ¬´–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é¬ª üçè—Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö –º–æ–¥—É–ª–µ–π (—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π):\n1Ô∏è‚É£–¢–æ–∫—Å–∏–∫–æ–ª–æ–≥–∏—è –∏ –æ—Å–Ω–æ–≤—ã –¥–µ—Ç–æ–∫—Å–∞; \n2Ô∏è‚É£–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–µ—Ç–æ–∫—Å–∞;\nüë®üèª\u200düéì–ö—É—Ä—Å —á–∏—Ç–∞—é—Ç –Ω–∞—É—á–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ù–ò–ò "–ú–µ–¥–∏—Ü–∏–Ω—ã —Ç—Ä—É–¥–∞" (–∫–∞—Ñ. —Ç–æ–∫—Å–∏–∫–æ–ª–æ–≥–∏–∏) –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞. \n‚è±–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—É—Ä—Å–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 156 —á–∞—Å–æ–≤ –∏–∑ –Ω–∏—Ö –ª–µ–∫—Ü–∏–∏ –≤ –æ–Ω–ª–∞–π–Ω —Ñ–æ—Ä–º–∞—Ç–µ 108 —á–∞—Å–æ–≤.\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞ - https://ahip.ru/images/detox2021.pdf\n\n–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞ –í—ã —É–∑–Ω–∞–µ—Ç–µ –≤—Å–µ –æ —Ç–æ–∫—Å–∏–Ω–∞—Ö –∏ —Å–º–æ–∂–µ—Ç–µ:\n ‚úîÔ∏è–°–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏ –ø–æ–¥ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏;\n‚úîÔ∏è–ë–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å;  \n‚úîÔ∏è–£–ª—É—á—à–∏—Ç—å –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏–µ;  \n‚úîÔ∏è–ü–æ–≤—ã—Å–∏—Ç—å –∏–º–º—É–Ω–∏—Ç–µ—Ç;  \n‚úîÔ∏è–£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–∞ —Å–Ω–∞;  \n‚úîÔ∏è–£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–Ω–µ—Ä–≥–∏–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ.  \n\n–ê–Ω–∞–ª–æ–≥–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –Ω–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–º —Ä—ã–Ω–∫–µ –Ω–µ—Ç.',
    '–¶–µ–Ω–∞ –∑–∞ –∫—É—Ä—Å "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è" —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 40 —Ç—ã—Å., –Ω–æ —Å–µ–π—á–∞—Å –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∑–∞ 25990 —Ç—ã—Å. –î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–µ—Å—Ç. –•–æ—Ç–µ–ª–∏ –±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é?']
    """
    courses_data_sheet = get_sheet_data()
    data = courses_data_sheet.row_values(course_index)
    if len(data) == 0:
        course_data = CourseData(has_data=False, name="", description="", cost="", study_format="")
    else:
        course_data = CourseData(has_data=True, name=data[0], description=data[1], cost=data[2], study_format="")
    return course_data


def get_courses_data():
    courses_data_sheet = get_sheet_data()
    courses_data = list()
    data = courses_data_sheet.get_all_values()
    for i in range(1, len(data)):
        courses_data.append(
            CourseData(name=data[i][0], description=data[i][1], price=data[i][2],
                       format=data[i][3], payment_link=data[i][4])
        )
    return courses_data



